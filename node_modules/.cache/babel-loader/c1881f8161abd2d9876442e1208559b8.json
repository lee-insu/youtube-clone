{"ast":null,"code":"import axios from 'axios';\n\nclass Youtube {\n  constructor(httpClient) {\n    this.youtube = httpClient;\n  }\n\n  async mostPopular() {\n    const response = await this.youtube.get('videos', {\n      params: {\n        part: 'snippet',\n        chart: 'mostPopular',\n        maxResults: 25\n      }\n    });\n    return response.data.items;\n  }\n\n  async search(query) {\n    const response = await this.youtube.get('search', {\n      params: {\n        part: 'snippet',\n        maxResults: 25,\n        type: 'video',\n        q: query\n      }\n    });\n    return response.data.items.map(item => ({ ...item,\n      id: item.id.videoId\n    }));\n  }\n\n}\n\nexport default Youtube;","map":{"version":3,"sources":["/Users/ellie/projects/dream_coding/academy/react-basic/youtube/src/service/youtube.js"],"names":["axios","Youtube","constructor","httpClient","youtube","mostPopular","response","get","params","part","chart","maxResults","data","items","search","query","type","q","map","item","id","videoId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAN,CAAc;AACZC,EAAAA,WAAW,CAACC,UAAD,EAAa;AACtB,SAAKC,OAAL,GAAeD,UAAf;AACD;;AAED,QAAME,WAAN,GAAoB;AAClB,UAAMC,QAAQ,GAAG,MAAM,KAAKF,OAAL,CAAaG,GAAb,CAAiB,QAAjB,EAA2B;AAChDC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,SADA;AAENC,QAAAA,KAAK,EAAE,aAFD;AAGNC,QAAAA,UAAU,EAAE;AAHN;AADwC,KAA3B,CAAvB;AAOA,WAAOL,QAAQ,CAACM,IAAT,CAAcC,KAArB;AACD;;AAED,QAAMC,MAAN,CAAaC,KAAb,EAAoB;AAClB,UAAMT,QAAQ,GAAG,MAAM,KAAKF,OAAL,CAAaG,GAAb,CAAiB,QAAjB,EAA2B;AAChDC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,SADA;AAENE,QAAAA,UAAU,EAAE,EAFN;AAGNK,QAAAA,IAAI,EAAE,OAHA;AAINC,QAAAA,CAAC,EAAEF;AAJG;AADwC,KAA3B,CAAvB;AAQA,WAAOT,QAAQ,CAACM,IAAT,CAAcC,KAAd,CAAoBK,GAApB,CAAwBC,IAAI,KAAK,EAAE,GAAGA,IAAL;AAAWC,MAAAA,EAAE,EAAED,IAAI,CAACC,EAAL,CAAQC;AAAvB,KAAL,CAA5B,CAAP;AACD;;AA1BW;;AA6Bd,eAAepB,OAAf","sourcesContent":["import axios from 'axios';\n\nclass Youtube {\n  constructor(httpClient) {\n    this.youtube = httpClient;\n  }\n\n  async mostPopular() {\n    const response = await this.youtube.get('videos', {\n      params: {\n        part: 'snippet',\n        chart: 'mostPopular',\n        maxResults: 25,\n      },\n    });\n    return response.data.items;\n  }\n\n  async search(query) {\n    const response = await this.youtube.get('search', {\n      params: {\n        part: 'snippet',\n        maxResults: 25,\n        type: 'video',\n        q: query,\n      },\n    });\n    return response.data.items.map(item => ({ ...item, id: item.id.videoId }));\n  }\n}\n\nexport default Youtube;\n"]},"metadata":{},"sourceType":"module"}